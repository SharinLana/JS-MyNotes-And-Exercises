/* AREA OF VISIBILITY */

//Допустим, у нас есть код:
if (true) {
	let result = '!';
}
console.log(result); //выведет ReferenceError, 
//переменные, находящие внутри скобок, видны только внутри этих скобок!
//Чтобы сделать переменную видимой снаружи, нужно и объявить ее снаружи:

let result;
if (true) {
	result = '!';
}
console.log(result); //выведет !


let num = 5;
let res;
if (num >= 0) {
	 result = 1;
} else {
	 result = 2;
}
console.log(result); //выведет 1


//НЮАНСЫ

//1. Если снаружи переменной присвоить одно значение, а внутри фигурных скобок поменять его на другое,
//то измененное значение и будет конечным результатом:
let result1 = 15;
if (true) {
    result1 = 17;
}
console.log(result1); //выведет 17

//2. Если внутри фигурных скобок объявить переменную через let с таким же точно названием, 
//как и переменную снаружи скобок, то для системы это будут дву совершенно разные переменные.
//Одна будет действовать снаружи, другая - только внутри.
let result2 = 3;
if (true) {
    let result2 = 17;
    console.log(result2); //внутренний выведет 17
}
console.log(result2); //наружний console выведет 3



//ОБЛАСТЬ ВИДИМОСТИ Var

//При let переменная, объявленная внутри скобок, не видна снаружи.
//Но при var она будет видна.
if (true) {
	var result3 = '!';
}
console.log(result3); // выведет '!'


let num2 = 1;
if (num2 == 1) {
	var result4 = 'верно';
} else {
	var result4 = 'неверно';
}
console.log(result4); //выведет верно (переменная внутри скобок будет видна снаружи из-за использования var)

//В настоящее время рекомендуется объявлять переменные именно через let, 
//так как область видимости таких переменных ограничена фигурными скобками 
//(это защищает код от случайных ошибок).