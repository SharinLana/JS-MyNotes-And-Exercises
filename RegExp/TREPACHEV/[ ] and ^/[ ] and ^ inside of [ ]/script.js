/*
Вы уже знаете, что спецсимволы внутри [ ] 
становятся обычными символами. 

Есть, однако, исключения: 
если вам нужны квадратные скобки как символы внутри [ ] - 
то их нужно экранировать обратным слешем.

Как вы знаете, шляпка внутри [ ] делает отрицание, 
будучи написанной в начале скобок. 
Значит, она является спецсимволом внутри этих скобок. 
Чтобы получить шляпку как символ, 
нужно или заэкранировать ее, или убрать с первого места.
*/

// Task 1
// в следующем коде шаблон поиска выглядит так: 
// между иксами стоит квадратная скобка "]" or "[":
let str = 'x]x xax x[x x1x';
let res = str.replace(/x[\[\]]x/g, '!');
console.log(res); // ! xax ! x1x

// Task 2
// Дана строка
// Напишите регулярку, которая найдет все слова по шаблону: 
// буква 'x', затем любое количество любых скобок, затем буква 'z'.
let str2 = 'x[]z x{}z x.z x()z';
let res2 = str2.replace(/x[\[\]{}()]+z/g, '!');
console.log(res2); // ! ! x.z !

// Task 3
// Дана строка
// Напишите регулярку, которая найдет строки 
// в любых скобках и заменят их на '!'.
let str3 = '[abc] {abc} abc (abc) [abc]';
let res3 = str3.replace(/[\[\]{}()]abc[\[\]{}()]/g, '!');
console.log(res3); // ! ! abc ! !



/* circumflex ^ внутри [ ] */


// Task 4 
// В следующем примере шаблон поиска такой: 
// первый символ - это все кроме 'd', потом две буквы 'x'.
let str4 = 'axx bxx ^xx dxx';
let res4 = str4.replace(/[^d]xx/g, '!');
console.log(res4); // ! ! ! dxx

// Task 5
// А теперь шаблон поиска такой: 
// первый символ - это 'd' или '^', потом две буквы 'x':
let str5 = 'axx bxx ^xx dxx';
let res5 = str5.replace(/[\^d]xx/g, '!'); // or take the ^ from the first place: /[d^]xx/g
console.log(res5); // axx bxx ! !

// Task 6
// Дана строка
// Напишите регулярку, которая найдет строки по шаблону: 
// circumflex или собака, а затем две латинских буквы.
let str6 = '^xx axx ^zz bkk @ss';
let res6 = str6.replace(/[\^@][a-z]{2}/g, '!');
console.log(res6); // ! axx ! bkk !

// Task 7
// Дана строка
// Напишите регулярку, которая найдет строки по шаблону: 
// НЕ circumflex и не собака, а затем две латинских буквы.
let str7 = '^xx axx ^zz bkk @ss';
let res7 = str7.replace(/[^\^@][a-z]{2,}/g, '!');
console.log(res7); // ^xx! ^zz! @ss

// Task 8
// Дана строка
// Напишите регулярку, которая найдет строки по шаблону: 
// НЕ шляпка, а затем две латинских буквы
let str8 = '^xx axx ^zz bkk';
let res8 = str8.replace(/[^\^][a-z]{2,}/g, '!');
console.log(res8); // ^xx! ^zz!