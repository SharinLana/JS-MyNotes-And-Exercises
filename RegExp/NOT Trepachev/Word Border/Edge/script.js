/* 
Граница слова \b – проверка, как ^ и $.
Граница слова \b не работает для алфавитов, не основанных на латинице!!!

Есть три вида позиций, которые являются границами слова:

1. Начало текста, если его первый символ \w.
2. Позиция внутри текста, если слева находится \w, а справа – не \w, 
или наоборот.
3. Конец текста, если его последний символ \w.

Например, регулярное выражение \bJava\b будет найдено в строке 
Hello, Java!, где Java – отдельное слово, 
но не будет найдено в строке Hello, JavaScript!.

*/
console.log('Hello, Java!'.match(/\bjava\b/gi)); // ['Java']
console.log('Hello, JavaScript'.match(/\bava\b/gi)); // null

// \bJava!\b также не совпадёт (восклицательный знак не является «символом слова» \w,
// поэтому после него нет границы слова).
console.log('Hello, Java!'.match(/\bJava!\b/g)); // null
console.log('Hello, Java!'.match(/\bJav\b/g)); // null (because the word border starts after 'a', not after 'v')


/* Мы можем использовать \b не только со словами, но и с цифрами.
Например, регулярное выражение \b\d\d\b 
ищет отдельно стоящие двузначные числа. 
Другими словами, оно требует, чтобы и до и после \d\d были символы, 
отличные от \w, 
такие как пробелы или пунктуация (или начало/конец текста). 
*/
console.log('1 23, 456, 14, 234'.match(/\b\d\d\b/g)); // (2) ['23', '14']
console.log('12, 23, 34, 45'.match(/\b\d\d\b/g)); // (4) ['12', '23', '34', '45']


//Task: Введите регулярное выражение, 
//чтобы найти время в строке: Завтрак в 09:00 в комнате 123:456.
let str = `Завтрак в 09:00 в комнате 123:456`;
console.log(str.match(/\b\d\d:\d\d\b/g)); // ['09:00']