/*
Пусть у нас есть функция, 
параметром принимающая два числа и возвращающая сумму квадратов этих чисел.

Пусть мы уверены, что функция square будет использоваться только в функции func 
и больше ни в какой другой.
В этом случае было бы удобно сделать так, 
чтобы ее никто случайно не использовал (вы сами или другой программист, 
работающий вместе с вами).

В JavaScript есть изящное решение: 
можно нашу вспомогательную функцию square поместить вовнутрь func. 
В этом случае наша вспомогательная функция будет доступна только внутри func, 
а снаружи - не будет.

*/

function func(num1, num2) {
    function getSquare(num) {
        return num ** 2;
    }

    return getSquare(num1) + getSquare(num2);
}

console.log(func(2, 3)); // 13
// console.log(getSquare(2)); // reference error


//Task: Сделайте функцию func2, которая параметрами будет принимать два числа, 
//а возвращать сумму квадрата первого числа с кубом второго числа.

//Сделайте для этого вспомогательную функцию square, 
//возводящую число в квадрат, 
//и вспомогательную функцию cube, возводящую число в куб.

function func2(num1, num2) {
    function getSquare(num) {
        return num ** 2;
    }

    function getCube(num) {
        return num ** 3;
    }

    return getSquare(num1) + getCube(num2);
}

console.log(func2(2, 3)); // 31