/*
Данная операция предназначена для массовой записи элементов массива в переменные 
в одну строчку кода.

Синтаксис этой операции следующий:
let [переменная1, переменная2, переменная3] = массив;
*/

let arr = ['Иван', 'Иванов', 'отдел разработки', 'программист', 2000];
let [firstNname, lastName, department, position, year] = arr;


/* Массив для деструктуризации не обязательно должен хранится в переменной. 
Он также может быть результатом работы функции.  */

function func() {
    return ['Steve', 'web developer', 31];
}
let [fName, jobPosition, age] = func();
console.log(fName); //Steve


/*
Можно начать записывать в переменные не сначала массива, 
а пропустить некоторые значения. 

Давайте, к примеру, пропустим год, а месяц и день запишем в переменные.
*/

let arr2 = [2025, 12, 31];
let [, month, day] = arr2;

console.log(month); // выведет 12
console.log(day);   // выведет 31


//
let arr3 = ['Иван', 'Иванов', 'отдел разработки', 'программист', 2000]; 
let [, , dep, job] = arr3;
console.log(dep); //отдел разработки
console.log(job); //программист


/*
Если в массиве меньше элементов, чем переменных,
то в "лишние" переменные запишется undefined:
*/
let arr4 = [1, 2];
let [num1, num2, num3] = arr4;
console.log(num3); // undefined


/*
Если в массиве больше элементов, чем переменных - 
лишние элементы никуда не запишутся и ничего страшного не произойдет.

при необходимости лишние элементы можно записать в массив с помощью оператора rest:
*/
let arr5 = [1, 2, 3, 4, 5, 6];
let [n1, n2, n3, ...rest] = arr5;
console.log(rest); // (3) [4, 5, 6]


//
let arr6 = ['Иван', 'Иванов', 'отдел разработки', 'программист', 2000]; 
let [, , dept, ...data] = arr6;
console.log(dept); // отдел разработки
console.log(data); // (2) ['программист', 2000]


/* Значение по умолчанию */
/* Для переменных можно указывать значения по умолчанию. 
В этом случае, если переменной не хватит элемента массива - возьмется значение по умолчанию.  
указывать значения по умолчанию - обязательно с конца массива*/
let arr7 = [2025, 12];
let [year7, month7, day7 = 1] = arr7;

console.log(year7);  // выведет 2025
console.log(month7); // выведет 12
console.log(day7);   // выведет 1
//А вот если для переменной day будет значение в массиве - значение по умолчанию будет проигнорировано.



//
let arr8 = ['Иван', 'Иванов', 'отдел разработки'];
let [firstName8, lastName8, department8, jobPosition8 = `junior`] = arr8;
console.log(jobPosition8); //junior


/* В качестве значения по умолчанию можно также указывать функцию.  */
let arr10 = [2022, 6];

function func10() {
    return (new Date).getDate();
}

let [year10, month10, day10 = func10()] = arr10;
console.log(day10);


/* Объявление переменных */
/* Не обязательно объявлять переменные при деструктуризации. 
Они могут быть объявлены заранее и тогда при присваивании 
не нужно будет писать команду let: */
let array = [2025, 12, 31];
let year11;
let month11;
let day11;

[year11, month11, day11] = array;

//Есть, однако, нюансы. 
let array2 = [2025, 12, 31];
let year2;

let [year2, month2, day2] = array2; //нельзя одну и туже переменную объявлять два раза 
//через let (получится, что year объявлена два раза).
//Через var, однако, переменные можно объявлять сколько угодно раз, 
//поэтому следующий код не приведет к ошибке:
let array3 = [2025, 12, 31];
var year3;

var [year3, month3, day3] = arr;