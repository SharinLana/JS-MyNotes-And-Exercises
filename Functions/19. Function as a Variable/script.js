/*
название функции и ее исходный код отделены друг от друга. 

Пусть у нас есть, например, функция func:

function func() {
	alert('!');
}

На самом деле у нас нет функции func. У нас есть переменная func, хранящая в себе исходный код функции.
Мы можем, к примеру, затереть переменную func чем-нибудь другим, 
например, строкой. 
В этом случае функция func больше не будет функцией, а будет строкой. Смотрите на примере:

function func() {
	alert('!');
}
func(); // выведет '!'

func = 'string'; // затрем переменную func
alert(func); // выведет 'string'

*/

function func() {
    return `abcde`;
}

func = 123;
console.log(func); // 123



/* Запись функции в другую переменную */
function funcA() {
	console.log('!');
}

let test = funcA; // теперь test такая же функция, как и func

// Проверим:
test(); //выведет '!'
funcA(); //выведет '!'




//Task: Сделайте функцию func1, которая будет возвращать через return число 3.
//Скопируйте исходный код функции func1, в переменную func2.
//Выведите на экран сумму результатов работы функций func1 и func2.
function func1() {
    return 3;
}

let func2 = func1;

console.log(func1() + func2()); // 6



/* Итак, мы с вами уже выяснили, что название функции 
и ее исходный код отделены друг от друга. 
Поэтому в JavaScript существует альтернативный синтаксис для создания функции: 
создается функция без имени и присваивается в какую-нибудь переменную. 
Эта переменная и становится именем функции.
Давайте посмотрим на примере:

let func = function() {
	alert('!');
};

func(); // выведет '!' 

*/

let func3 = function() {
    return 1
}

let func4 = function() {
    return 2
}

let sum = func3() + func4();
console.log(sum); // 3


/* Важный нюанс!!! 

Из описанного выше следует, что существование переменной и функции с одинаковым именем легко может привести к проблеме.
В следующем примере функция func будет затерта и вместо нее станет строка 'string':
Чтобы такого не происходило, следует придерживаться правила, общего для всех языков программирования: 
функции должны быть глаголами, а переменные - существительными.
*/
function func5() {
	return '!';
}

func5 = 'string'; // затрем переменную с функцией строкой
func5(); // получим ошибку, тк func5  not a function anymore